name: Docker
on:
    push:
      tags:
        - "v*.*.*"
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
jobs:
    container:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            packages: write
            contents: read
        timeout-minutes: 60
        steps:
            - name: Checkout repository
              id: checkout
              uses: actions/checkout@v3
            - name: Install Docker BuildX
              uses: docker/setup-buildx-action@v2
              id: buildx
              with:
                  install: true
            - name: Log into registry ${{ env.REGISTRY }}
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Finalize Docker Metadata
              id: docker_tagging
              run: |
                  if [[ "${GITHUB_REF##*/}" == "main" ]] || [[ ${GITHUB_REF##*/} == "master" ]]; then
                    echo "::set-output name=docker_tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF##*/},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
                  else
                    echo "::set-output name=docker_tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF##*/}"
                  fi
            - name: Inspect Docker Metadata
              run: |
                  echo "TAGS -> ${{ steps.docker_tagging.outputs.docker_tags }}"
                  echo "LABELS ->  ${{ steps.meta.outputs.labels }}"
            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  tags: ${{ steps.docker_tagging.outputs.docker_tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
                      VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
                      REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
